{"version":3,"sources":["components/UserView.jsx","services/api-helper.js","components/Register.jsx","components/LoginButton.jsx","components/LogoutButton.jsx","components/Moods.jsx","components/MoodPage.jsx","components/Login.jsx","components/Header.jsx","App.js","index.js"],"names":["withRouter","props","className","users","map","user","key","id","onClick","e","currentUser","history","push","window","scrollTo","name","alt","api","axios","create","baseURL","loginUser","loginData","a","post","auth","resp","localStorage","setItem","data","token","defaults","headers","common","authorization","registerUser","registerData","verifyUser","getItem","get","readAllUsers","updateUser","put","destroyUser","delete","createRemedy","remedy","readAllRemedies","mood_id","viewAllMoods","Register","handleRegister","preventDefault","state","authFormData","setState","handleChange","target","value","username","email","password","onSubmit","this","type","onChange","required","React","Component","LoginButton","LogoutButton","Moods","moods","console","log","mood","index","src","image_url","MoodPage","isLoggedIn","title","description","user_id","handleLoginButton","Login","handleLogin","alert","to","Header","resetForm","currentadmin","handleLogout","placeholder","App","getUsers","newRemedy","remedyForm","prevState","remedies","descriptiom","editUser","userForm","updatedUser","deleteUser","filter","handleFormChange","mountEditForm","find","el","parseInt","photo","mountRemedyCreateForm","mountRemedyEditForm","exact","path","render","authHandleChange","formData","match","params","editRemedy","RemedyForm","deleteRemedy","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.bd97e39c.chunk.js","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router';\n\nfunction UserView(props) {\n  return (\n    <div className=\"user-container\">\n      {props.users.map(user => (\n        <div\n          key={user.id}\n          className=\"user-card\"\n          onClick={(e) => {\n            if (props.currentUser) {\n              props.history.push(`/users/${user.id}`);\n            } else {\n              props.history.push(`/login`);\n            }\n            window.scrollTo(0, 0);\n          }}>\n          \n          <h3>\n            <p>{user.name}</p>\n          </h3>\n        </div>\n      ))}\n      <div\n        className=\"user-card\"\n        onClick={() => {\n          props.history.push('/new/user');\n          window.scrollTo(0, 0);\n        }}>\n        <img\n          alt=\"Create a new Remedy\"\n          />\n        <h3>Create a new Remedy</h3>\n      </div>\n    </div>\n  )\n}\n\nexport default withRouter(UserView)","import axios from 'axios';\n\nconst baseUrl = process.env.NODE_ENV === 'production' ?'https://ancient-scrubland-63876.herokuapp.com/': 'http://localhost:30000'\n\nconst api = axios.create({\n  baseURL: baseUrl\n})\n\n\n\nexport const loginUser = async (loginData) => {\n  const resp = await api.post('/auth/login', { auth: loginData })\n  localStorage.setItem('authToken', resp.data.token);\n  api.defaults.headers.common.authorization = `Bearer ${resp.data.token}`\n  return resp.data.user\n}\n\nexport const registerUser = async (registerData) => {\n  const resp = await api.post('/users/', { user: registerData })\n  localStorage.setItem('authToken', resp.data.token);\n  api.defaults.headers.common.authorization = `Bearer ${resp.data.token}`\n  return resp.data.user\n}\n\nexport const verifyUser = async () => {\n  const token = localStorage.getItem('authToken');\n  if (token) {\n    api.defaults.headers.common.authorization = `Bearer ${token}`\n    const resp = await api.get('/auth/verify');\n    return resp.data\n  }\n  return false\n}\n\n\n\nexport const removeToken = () => {\n  api.defaults.headers.common.authorization = null;\n}\n\nexport const readAllUsers = async () => {\n  const resp = await api.get('/users')\n  return resp.data\n}\n\nexport const updateUser = async (id, data) => {\n  const resp = await api.put(`/users/${id}`, { user: data })\n  return resp.data\n}\n\nexport const destroyUser = async (id) => {\n  const resp = await api.delete(`/users/${id}`)\n  return resp.data\n}\n// ---------------------remedies----------------------\n\nexport const createRemedy = async (data ) => {\n    const resp = await api.post('new/remedies', {remedy:data})\n    return resp.data\n}\nexport const readAllRemedies = async (id, mood_id) => {\n  const resp = await api.get(`/remedies/${id}/${mood_id}`)\n  return resp.data\n}\nexport const viewAllMoods = async () => {\n  const resp = await api.get('/moods')\n  return resp.data\n}","import React from 'react';\nimport { registerUser} from '../services/api-helper'\nimport { withRouter } from 'react-router-dom';\n\n// This component handles our register form\nexport default class Register extends React.Component{\n   constructor(props){\n     super(props)\n\n     this.state = {\n      currentUser: null,\n      authFormData: {\n        username: \"\",\n        email: \"\",\n        password: \"\"\n      }\n    };\n  }\n      \n     \n  \n\n    handleRegister = async (e) => {\n    e.preventDefault();\n    const currentUser = await registerUser(this.state.authFormData);\n    this.setState({ currentUser });\n    }\n\n\n    handleChange = async (e) => {\n      this.setState({\n        [e.target.name]: e.target.value\n      })\n\n    }\n  \n    render() {\n      return (\n          <div className=\"auth-container\">\n            <h2>Register</h2>\n            <hr />\n            <form onSubmit={this.handleRegister} >\n              <p>Username:</p>\n              <input name=\"username\" type=\"text\" value={this.state.authFormData.username} onChange={this.handleChange} required/>\n              <p>Email:</p>\n              <input name=\"email\" type=\"email\" value={this.state.authFormData.email} onChange={this.handleChange} required/>\n              <p>Password:</p>\n              <input name=\"password\" type=\"password\" value={this.state.authFormData.password} onChange={this.handleChange} required />\n              <hr/>\n              <button>Register</button>\n            </form>\n          </div>\n        );\n    \n\n    }\n\n\n}","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nclass LoginButton extends Component {\n    \n  \n   \n\n  render() {\n    return(\n      <div>\n      p\n    </div>\n  \n    )\n  }\n}\nexport default LoginButton; ","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nclass LogoutButton extends Component {\n\n   \n\n  render() {\n\n    return (\n      <div></div>\n    )\n  }\n}\nexport default LogoutButton; ","/* eslint-disable react/no-direct-mutation-state */\nimport React from \"react\"\n\n// import CreateRemedies from \"./CreateRemedies\"\n// import { withRouter } from 'react-router-dom';\nimport {\n  viewAllMoods,\n  \n} from '../services/api-helper';\n\nexport default class Moods extends React.Component{\n    constructor(props){\n      super(props)\n    this.state = {\n         moods: null\n      \n    }\n  }\n\n\n    async componentDidMount() {\n    const moods = await viewAllMoods();\n    console.log(\"hello\")\n     this.setState({ moods }) \n    }\n\n     render() {\n       const moods = this.state.moods && this.state.moods.map((mood, index) =>{\n            return (\n              <div key={index}>\n                 \n          \n                   <div >\n                    <td><img src={mood.image_url} alt=\"\"/> </td>\n                    <h3>{mood.name}</h3>\n                    \n                    </div> \n                    </div>\n                      )\n                    });\n\n                    return(\n                      <div>\n                          {moods}\n                      </div>\n                  )\n              }\n \n}\n","import React from \"react\"\nimport Register from \"./Register\"\n\nimport LoginButton from './LoginButton'\nimport LogoutButton from \"./LogoutButton\"\nimport { verifyUser } from '../services/api-helper'\nimport Moods from './Moods'\n\n\nexport default class MoodPage extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            currentUser: \" \",\n            isLoggedIn:!true,\n            mood: [null],\n            remedy: {\n              title: \"\",\n              description: \"\",\n              user_id: \"\",\n              mood_id: \"\"\n            }\n        \n        }\n           \n        \n    };\n    \n\n\n           \n            async componentDidMount() {\n           \n            const currentUser = await verifyUser();\n            if (verifyUser === true)\n                this.setState({ currentUser})\n            }\n            \n\n          \n            render(){\n            \n                return (    \n                   \n                    \n                \n                     <div>\n                    <LoginButton onClick={this.props.handleLoginButton} />  \n\n                            <div><Register/></div> \n\n                        <h1>Welome To Chrysalis </h1>\n                       \n\n                        <div> <Moods/> </div>\n                            \n                            \n                       <LogoutButton onClick={this.props.handleLoginButton} />\n                    \n                     \n                            \n                                 \n                         </div>\n                    \n                    \n                )\n            }        \n }         \n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { loginUser} from '../services/api-helper'\nimport { withRouter } from 'react-router-dom';\n\n// This component handles our login form and has a link to the register form\nexport default class Login extends React.Component{\n  constructor(props){\n    super(props)\n\n    this.state = {\n      currentUser: !true,\n     authFormData: {\n       username: \"\",\n       email: \"\",\n       password: \"\"\n     }\n   };\n }\n     \n    \n \n  handleChange= async (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n\n  }\n\n   handleLogin= async (e) => {\n   e.preventDefault();\n   const currentUser = await loginUser(this.state.authFormData);\n   currentUser ? this.setState({  currentUser }) : alert(\"wrong username or password\")\n   \n   }\n\n\n \n   render() {\n    return (\n      <div className=\"auth-container\">\n        <h2>login</h2>\n        <hr />\n        <form onSubmit={(e) => {\n          e.preventDefault();\n          this.handleLogin();}} >\n          <p>Username:</p>\n          <input name=\"username\" type=\"text\" value={this.state.authFormData.username} onChange={this.handleChange} required />\n          <p>Password:</p>\n          <input name=\"password\" type=\"password\" value={this.state.authFormData.password} onChange={this.handleChange} required />\n          <hr/>\n          <button type=\"submit\">Login</button>\n\n          <Link to=\"/register\">Register</Link>\n        </form>\n      </div>\n    );\n  }\n}  \n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport LogoutButton from './LogoutButton'\nimport LoginButton from './LoginButton'\nimport { withRouter } from 'react-router-dom';\n\nexport default function Header(props) {\n  return (\n    <header>\n      <h1><Link to='/' onClick={props.resetForm}>Chrysalist Mood App</Link></h1>\n      <div>\n        {props.currentUser\n          ?\n          <>\n            <p>{props.currentadmin.username}</p>\n            <LogoutButton onClick={props.handleLogout} placeholder=\"logout\"/>\n          </>\n          :\n          <LoginButton onClick={props.handleLoginButton} placeholder=\"Login/register\"/>\n        }\n      </div>\n    </header>\n  )\n}","import React from 'react';\nimport { Route, BrowserRouter } from 'react-router-dom';\nimport { withRouter } from 'react-router';\nimport UserView from './components/UserView'\n// import EditUse from './component/EditUser'\nimport MoodPage from './components/MoodPage'\nimport Moods from './components/Moods'\n// import UserPage from './components/UserPage'\n// import CreateRemedy from './components/CreateRemedies'\nimport Login from './components/Login'\nimport Register from './components/Register'\nimport {\n  \n  createRemedy,\n  verifyUser,\n  readAllRemedies,\n  updateUser,\n  destroyUser,\n  readAllUsers,\n} from './services/api-helper';\n\nimport Header from './components/Header';\n\nimport './App.css';\n// import Header from './components/Header';\n\n  class App extends React.Component{\n\n\n constructor(props) {\n  super(props);\n  this.state = {\n    currentUser: null,\n    authFormData: {\n      username: \"\",\n      email: \"\",\n      password: \"\"\n    }\n  };\n}\n\n\nasync componentDidMount() {\n  this.getUsers();\n  const currentUser = await verifyUser();\n  if (currentUser) {\n    this.setState({ currentUser })\n  }\n}\n\ngetUsers = async () => {\n  const users = await readAllUsers();\n  this.setState({\n    users\n  })\n}\n\nnewRemedy = async (e) => {\n  e.preventDefault();\n  const remedy = await createRemedy(this.state.remedyForm);\n  this.setState(prevState => ({\n    remedies: [...prevState.remedies, remedy],\n    remedyForm: {\n      title: \"\",\n      descriptiom: \"\"\n    }\n  }))\n}\n\neditUser = async () => {\n  const { userForm } = this.state\n  const updatedUser = await updateUser(userForm.id, userForm);\n  this.setState(prevState => (\n    {\n      users: prevState.users.map(user => {\n        return user.id === userForm.id ? updatedUser : user\n      }),\n    }\n  ))\n}\n\ndeleteUser = async (id) => {\n  await destroyUser(id);\n  this.setState(prevState => ({\n    users: prevState.users.filter(user => user.id !== id)\n  }))\n}\n\nhandleFormChange = (e) => {\n  const { name, value } = e.target;\n  this.setState(prevState => ({\n    userForm: {\n      ...prevState.userForm,\n      [name]: value\n    }\n  }))\n}\n\nmountEditForm = async (id) => {\n  const users = await readAllUsers();\n  const user = users.find(el => el.id === parseInt(id));\n  this.setState({\n    userForm: user\n  });\n}\n\nresetForm = () => {\n  this.setState({\n    userForm: {\n      name: \"\",\n      photo: \"\"\n    }\n  })\n}\nhandleFormChange = (e) => {\n  const { name, value } = e.target;\n  this.setState(prevState => ({\n    userForm: {\n      ...prevState.userForm,\n      [name]: value\n    }\n  }))\n}\n\nmountEditForm = async (id) => {\n  const users = await readAllUsers();\n  const user = users.find(el => el.id === parseInt(id));\n  this.setState({\n    userForm: user\n  });\n}\n\nmountRemedyCreateForm = async (id) => {\n  const remedies = await readAllRemedies();\n  const remedy = remedies.find(el => el.id === parseInt(id));\n  this.setState({\n    remedyForm: remedy\n  });\n}\n\n\nmountRemedyEditForm = async (id) => {\n  const remedies = await readAllRemedies();\n  const remedy = remedies.find(el => el.id === parseInt(id));\n  this.setState({\n    remedyForm: remedy\n  });\n}\n\n\nresetForm = () => {\n  this.setState({\n    userForm: {\n      name: \"\",\n      photo: \"\"\n    }\n  })\n}\n\n \nrender(){\n\n    return (\n      <div className=\"App\" >\n        <Header\n          handleLoginButton={this.handleLoginButton}\n          handleLogout={this.handleLogout}\n          currentUser={this.state.currentUser}\n        />\n        <Route exact path=\"/login\" render={() => (\n          <Login\n            handleLogin={this.handleLogin}\n            handleChange={this.authHandleChange}\n            formData={this.state.authFormData} />)} />\n        <Route exact path=\"/register\" render={() => (\n          <Register />)} />\n        {/* <Route\n          exact path=\"/\"\n          render={() => (\n            <UserView\n              currentUser={this.state.currentUser}\n              users={this.state.users}\n              userForm={this.state.userForm}\n              handleFormChange={this.handleFormChange}\n              newUser={this.newUser} />\n          )}/> */}\n          <Route\n          exact path=\"/\"\n          render={() => (\n            <MoodPage />\n          )}/>\n          <Route\n          exact path=\"/\"\n          render={() => (\n            <Moods />\n          )}/>\n          CreateRemedy\n        <Route\n          path=\"/remedies/:id\"\n          render={(props) => {\n            const { id } = props.match.params;\n            const remedy = this.state.remedies.find(el => el.id === parseInt(id));\n            return <Moods\n            id={id}\n            remedy={remedy}\n            handleFormChange={this.handleFormChange}\n            mountRemedyEditForm={this.mountRemedyEditForm}\n            editRemedy={this.editRemedy}\n            RemedyForm={this.state.RemedyForm}\n            deleteRemedy={this.deleteRemedy} />\n          }}\n        />\n        <Route\n          path=\"/remedies/:id\"\n          render={(props) => {\n            const { id } = props.match.params;\n            const remedy = this.state.remedies.find(el => el.id === parseInt(id));\n            return <Moods\n              id={id}\n               remedy={remedy}\n              handleFormChange={this.handleFormChange}\n              mountRemedyEditForm={this.mountRemedyEditForm}\n              editRemedy={this.editRemedy}\n              RemedyForm={this.state.RemedyForm}\n              deleteRemedy={this.deleteRemedy} />\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}