{"ast":null,"code":"// import React, { Component } from 'react';\n// import { Route } from 'react-router-dom';\n// import { withRouter } from 'react-router';\n// class CreateRemedies extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       isEdit: false,\n//       isNew: false\n//     }\n//   }\n//   componentDidMount() {\n//     this.props.mountRemedyCreateForm(this.props.id);\n//   }\n//   render(){ \n//     return (\n//       <div className=\"create-form\" >\n//         <h2>Create a new remedy</h2>\n//         <form onSubmit={this.props.newRemedy}>\n//           <p>Photo Link:</p>\n//           <input\n//             type=\"text\"\n//             name=\"name\"\n//             value={this.rops.remedyForm.photo}\n//             onChange={this.props.handleFormChange} />\n//             <p>Remedy's name:</p>\n//           <input\n//             type=\"text\"\n//             name=\"description\"\n//             value={this.props.remedyForm.name}\n//             onChange={this.props.handleFormChange} \n//             />\n//            <h1>{this.props.emedy.title}</h1>\n//                 <h1>{this.props.remedy.description}</h1>\n//                 <button onClick={() => {\n//                   this.setState({\n//                     isNew: true\n//                   })\n//                   this.props.history.push(`new/remedies/${this.props.remedy.id}/${this.props.mood.id}/${this.props.user.id}`)\n//                 }}>Create</button>\n//         </form>\n//       </div >\n//     )\n//  } \n//   componentDidMount() {\n//     this.props.mountRemedyEditForm(this.props.id);\n//   }\n//   render() {\n//     const { remedy } = this.props;\n//     return (\n//       <div className=\"remedy-page\">\n//         {remedy === undefined ? <h2>Loading . . .</h2> : (\n//           <div>\n//          <div>{remedy.title} {remedy.description}  </div>\n//             {this.state.isEdit ?\n//               // <Route path={'/remedies/:id/edit'} render={() => (\n//               //   <EditRemedy\n//               //     handleFormChange={this.props.handleFormChange}\n//               //     handleSubmit={(e) => {\n//               //       e.preventDefault();\n//               //       this.props.editRemedy();\n//               //       this.setState({ isEdit: false })\n//               //       this.props.history.push(`/remedies/${this.props.remedyForm.id/this.props.user.id/this.props.mood.id}`)\n//               //     }}\n//               //     remedyForm={this.props.remedyForm} />\n//               // )} />\n//               :\n//               <>\n//                 <h1>{remedy.title}</h1>\n//                 <h1>{remedy.description}</h1>\n//                 <button onClick={() => {\n//                   this.setState({\n//                     isEdit: true\n//                   })\n//                   this.props.history.push(`/remedies/${remedy.id}/edit`)\n//                 }}>Edit</button>\n//                 <button onClick={() => {\n//                   this.props.deleteRemedy(remedy.id);\n//                   this.props.history.push('/')\n//                 }}>Delete</button>\n//               </>\n//             }\n//           </div>)}\n//       </div>)\n//   }\n// }\n// export default withRouter(CreateRemedies);","map":{"version":3,"sources":["/Users/fuentes/newB/chrysalist4/client/src/components/CreateRemedies.jsx"],"names":[],"mappings":"AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import React, { Component } from 'react';\n// import { Route } from 'react-router-dom';\n// import { withRouter } from 'react-router';\n\n// class CreateRemedies extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       isEdit: false,\n//       isNew: false\n//     }\n//   }\n\n//   componentDidMount() {\n//     this.props.mountRemedyCreateForm(this.props.id);\n//   }\n//   render(){ \n  \n//     return (\n//       <div className=\"create-form\" >\n//         <h2>Create a new remedy</h2>\n//         <form onSubmit={this.props.newRemedy}>\n//           <p>Photo Link:</p>\n//           <input\n//             type=\"text\"\n//             name=\"name\"\n\n//             value={this.rops.remedyForm.photo}\n//             onChange={this.props.handleFormChange} />\n           \n//             <p>Remedy's name:</p>\n            \n//           <input\n//             type=\"text\"\n//             name=\"description\"\n//             value={this.props.remedyForm.name}\n//             onChange={this.props.handleFormChange} \n//             />\n//            <h1>{this.props.emedy.title}</h1>\n//                 <h1>{this.props.remedy.description}</h1>\n//                 <button onClick={() => {\n//                   this.setState({\n//                     isNew: true\n//                   })\n//                   this.props.history.push(`new/remedies/${this.props.remedy.id}/${this.props.mood.id}/${this.props.user.id}`)\n//                 }}>Create</button>\n          \n//         </form>\n//       </div >\n      \n//     )\n//  } \n  \n\n//   componentDidMount() {\n//     this.props.mountRemedyEditForm(this.props.id);\n//   }\n\n//   render() {\n//     const { remedy } = this.props;\n//     return (\n//       <div className=\"remedy-page\">\n//         {remedy === undefined ? <h2>Loading . . .</h2> : (\n//           <div>\n//          <div>{remedy.title} {remedy.description}  </div>\n//             {this.state.isEdit ?\n//               // <Route path={'/remedies/:id/edit'} render={() => (\n//               //   <EditRemedy\n//               //     handleFormChange={this.props.handleFormChange}\n//               //     handleSubmit={(e) => {\n//               //       e.preventDefault();\n//               //       this.props.editRemedy();\n//               //       this.setState({ isEdit: false })\n//               //       this.props.history.push(`/remedies/${this.props.remedyForm.id/this.props.user.id/this.props.mood.id}`)\n//               //     }}\n//               //     remedyForm={this.props.remedyForm} />\n//               // )} />\n//               :\n//               <>\n//                 <h1>{remedy.title}</h1>\n//                 <h1>{remedy.description}</h1>\n//                 <button onClick={() => {\n//                   this.setState({\n//                     isEdit: true\n//                   })\n//                   this.props.history.push(`/remedies/${remedy.id}/edit`)\n//                 }}>Edit</button>\n//                 <button onClick={() => {\n//                   this.props.deleteRemedy(remedy.id);\n//                   this.props.history.push('/')\n//                 }}>Delete</button>\n//               </>\n//             }\n//           </div>)}\n//       </div>)\n//   }\n// }\n\n// export default withRouter(CreateRemedies);"]},"metadata":{},"sourceType":"module"}