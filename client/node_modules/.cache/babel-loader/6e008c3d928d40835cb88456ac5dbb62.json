{"ast":null,"code":"var _jsxFileName = \"/Users/fuentes/newB/chrysalist4/client/src/App.js\";\nimport React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { withRouter } from 'react-router';\nimport UserView from './components/UserView';\nimport UserPage from './components/UserPage';\nimport CreateUser from './components/CreateUser';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport { createUser, readAllUsers, updateUser, destroyUser, loginUser, registerUser, verifyUser, removeToken } from './services/api-helper';\nimport './App.css';\nimport Header from './components/Header';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getUsers = async () => {\n      const users = await readAllUsers();\n      this.setState({\n        users\n      });\n    };\n\n    this.editUser = async () => {\n      const {\n        userForm\n      } = this.state;\n      const updatedUser = await updateUser(userForm.id, userForm);\n      this.setState(prevState => ({\n        users: prevState.users.map(user => {\n          return user.id === userForm.id ? updatedUser : user;\n        })\n      }));\n    };\n\n    this.deleteUser = async id => {\n      await destroyUser(id);\n      this.setState(prevState => ({\n        users: prevState.users.filter(user => user.id !== id)\n      }));\n    };\n\n    this.handleFormChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState(prevState => ({\n        userForm: { ...prevState.userForm,\n          [name]: value\n        }\n      }));\n    };\n\n    this.mountEditForm = async id => {\n      const users = await readAllUsers();\n      const user = users.find(el => el.id === parseInt(id));\n      this.setState({\n        userForm: user\n      });\n    };\n\n    this.resetForm = () => {\n      this.setState({\n        userForm: {\n          name: \"\",\n          photo: \"\"\n        }\n      });\n    };\n\n    this.handleLoginButton = () => {\n      this.props.history.push(\"/login\");\n    };\n\n    this.handleLogin = async () => {\n      const currentUser = await loginUser(this.state.authFormData);\n      this.setState({\n        currentUser\n      });\n    };\n\n    this.handleRegister = async e => {\n      e.preventDefault();\n      const currentUser = await registerUser(this.state.authFormData);\n      this.setState({\n        currentUser\n      });\n    };\n\n    this.handleLogout = () => {\n      localStorage.removeItem(\"authToken\");\n      removeToken();\n      this.setState({\n        currentUser: null\n      });\n    };\n\n    this.authHandleChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState(prevState => ({\n        authFormData: { ...prevState.authFormData,\n          [name]: value\n        }\n      }));\n    };\n\n    this.state = {\n      users: [],\n      remedyFormData: {\n        title: \"\",\n        description: \"\",\n        mood_id: \"\",\n        user_id: \"\"\n      },\n      currentUser: null,\n      authFormData: {\n        username: \"\",\n        email: \"\",\n        password: \"\"\n      }\n    };\n  }\n\n  async componentDidMount() {\n    this.getUsers();\n    const currentUser = await verifyUser();\n\n    if (currentUser) {\n      this.setState({\n        currentUser\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      handleLoginButton: this.handleLoginButton,\n      handleLogout: this.handleLogout,\n      currentUser: this.state.currentUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/remedies\",\n      render: () => /*#__PURE__*/React.createElement(Login, {\n        handleLogin: this.handleLogin,\n        handleChange: this.authHandleChange,\n        formData: this.state.authFormData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/register\",\n      render: () => /*#__PURE__*/React.createElement(Register, {\n        handleRegister: this.handleRegister,\n        handleChange: this.authHandleChange,\n        formData: this.state.authFormData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => /*#__PURE__*/React.createElement(UserView, {\n        currentUser: this.state.currentUser,\n        users: this.state.users,\n        userForm: this.state.userForm,\n        handleFormChange: this.handleFormChange,\n        newUser: this.newUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/users/:id\",\n      render: props => {\n        const {\n          id\n        } = props.match.params;\n        const user = this.state.users.find(el => el.id === parseInt(id));\n        return /*#__PURE__*/React.createElement(UserPage, {\n          id: id,\n          user: user,\n          handleFormChange: this.handleFormChange,\n          mountEditForm: this.mountEditForm,\n          editUser: this.editUser,\n          userForm: this.state.userForm,\n          deleteUser: this.deleteUser,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 20\n          }\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default withRouter(App);","map":{"version":3,"sources":["/Users/fuentes/newB/chrysalist4/client/src/App.js"],"names":["React","Component","Route","withRouter","UserView","UserPage","CreateUser","Login","Register","createUser","readAllUsers","updateUser","destroyUser","loginUser","registerUser","verifyUser","removeToken","Header","App","constructor","props","getUsers","users","setState","editUser","userForm","state","updatedUser","id","prevState","map","user","deleteUser","filter","handleFormChange","e","name","value","target","mountEditForm","find","el","parseInt","resetForm","photo","handleLoginButton","history","push","handleLogin","currentUser","authFormData","handleRegister","preventDefault","handleLogout","localStorage","removeItem","authHandleChange","remedyFormData","title","description","mood_id","user_id","username","email","password","componentDidMount","render","newUser","match","params"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { withRouter } from 'react-router';\n\nimport UserView from './components/UserView';\nimport UserPage from './components/UserPage';\nimport CreateUser from './components/CreateUser'\nimport Login from './components/Login'\nimport Register from './components/Register'\n\nimport {\n  createUser,\n  readAllUsers,\n  updateUser,\n  destroyUser,\n  loginUser,\n  registerUser,\n  verifyUser,\n  removeToken\n} from './services/api-helper'\n\nimport './App.css';\nimport Header from './components/Header';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: [],\n      remedyFormData: {\n        title: \"\",\n        description: \"\",\n        mood_id: \"\",\n        user_id: \"\"\n      },\n    \n      currentUser: null,\n      authFormData: {\n        username: \"\",\n        email: \"\",\n        password: \"\"\n      }\n    };\n  }\n\n  async componentDidMount() {\n    this.getUsers();\n    const currentUser = await verifyUser();\n    if (currentUser) {\n      this.setState({ currentUser })\n    }\n  }\n  getUsers = async () => {\n    const users = await readAllUsers();\n    this.setState({\n      users\n    })\n  }\n\n  \n\n  editUser = async () => {\n    const { userForm } = this.state\n    const updatedUser = await updateUser(userForm.id, userForm);\n    this.setState(prevState => (\n      {\n        users: prevState.users.map(user => {\n          return user.id === userForm.id ? updatedUser : user\n        }),\n      }\n    ))\n  }\n\n  deleteUser= async (id) => {\n    await destroyUser(id);\n    this.setState(prevState => ({\n      users: prevState.users.filter(user => user.id !== id)\n    }))\n  }\n\n  handleFormChange = (e) => {\n    const { name, value } = e.target;\n    this.setState(prevState => ({\n      userForm: {\n        ...prevState.userForm,\n        [name]: value\n      }\n    }))\n  }\n\n  mountEditForm = async (id) => {\n    const users = await readAllUsers();\n    const user = users.find(el => el.id === parseInt(id));\n    this.setState({\n      userForm: user\n    });\n  }\n\n  resetForm = () => {\n    this.setState({\n      userForm: {\n        name: \"\",\n        photo: \"\"\n      }\n    })\n  }\n\n  // -------------- AUTH ------------------\n\n  handleLoginButton = () => {\n    this.props.history.push(\"/login\")\n  }\n\n  handleLogin = async () => {\n    const currentUser = await loginUser(this.state.authFormData);\n    this.setState({ currentUser });\n  }\n  \n  handleRegister = async (e) => {\n    e.preventDefault();\n    const currentUser = await registerUser(this.state.authFormData);\n    this.setState({ currentUser });\n  }\n  \n  handleLogout = () => {\n    localStorage.removeItem(\"authToken\");\n    removeToken();\n    this.setState({\n      currentUser: null\n    })\n  }\n\n  authHandleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState(prevState => ({\n      authFormData: {\n        ...prevState.authFormData,\n        [name]: value\n      }\n    }));\n  }\n\n  render() {\n    return (\n      <div className=\"App\" >\n        <Header\n          handleLoginButton={this.handleLoginButton}\n          handleLogout={this.handleLogout}\n          currentUser={this.state.currentUser}\n        />\n        <Route exact path=\"/remedies\" render={() => (\n          <Login\n            handleLogin={this.handleLogin}\n            handleChange={this.authHandleChange}\n            formData={this.state.authFormData} />)} />\n        <Route exact path=\"/register\" render={() => (\n          <Register\n            handleRegister={this.handleRegister}\n            handleChange={this.authHandleChange}\n            formData={this.state.authFormData} />)} />\n        <Route\n          exact path=\"/\"\n          render={() => (\n            <UserView\n              currentUser={this.state.currentUser}\n              users={this.state.users}\n              userForm={this.state.userForm}\n              handleFormChange={this.handleFormChange}\n              newUser={this.newUser} />\n          )}\n        />\n        \n        <Route\n          path=\"/users/:id\"\n          render={(props) => {\n            const { id } = props.match.params;\n            const user = this.state.users.find(el => el.id === parseInt(id));\n            return <UserPage\n              id={id}\n              user={user}\n              handleFormChange={this.handleFormChange}\n              mountEditForm={this.mountEditForm}\n              editUser={this.editUser}\n              userForm={this.state.userForm}\n              deleteUser={this.deleteUser} />\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);"]},"metadata":{},"sourceType":"module"}