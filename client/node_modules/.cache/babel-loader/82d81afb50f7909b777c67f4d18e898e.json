{"ast":null,"code":"var _jsxFileName = \"/Users/fuentes/newB/chrysalist4/client/src/App.js\";\nimport React from 'react';\nimport { Route, BrowserRouter, Switch } from 'react-router-dom';\nimport { withRouter } from 'react-router';\nimport UserView from './components/UserView'; // import EditUse from './component/EditUser'\n\nimport MoodPage from './components/MoodPage';\nimport Moods from './components/Moods';\nimport UserPage from './components/UserPage'; // import CreateRemedy from './components/CreateRemedies'\n\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport { createRemedy, verifyUser, readAllRemedies, updateUser, destroyUser, readAllUsers } from './services/api-helper';\nimport Header from './components/Header';\nimport './App.css'; // import Header from './components/Header';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getUsers = async () => {\n      const users = await readAllUsers();\n      this.setState({\n        users\n      });\n    };\n\n    this.newRemedy = async e => {\n      e.preventDefault();\n      const remedy = await createRemedy(this.state.remedyForm);\n      this.setState(prevState => ({\n        remedies: [...prevState.remedies, remedy],\n        remedyForm: {\n          title: \"\",\n          descriptiom: \"\"\n        }\n      }));\n    };\n\n    this.editUser = async () => {\n      const {\n        userForm\n      } = this.state;\n      const updatedUser = await updateUser(userForm.id, userForm);\n      this.setState(prevState => ({\n        users: prevState.users.map(user => {\n          return user.id === userForm.id ? updatedUser : user;\n        })\n      }));\n    };\n\n    this.deleteUser = async id => {\n      await destroyUser(id);\n      this.setState(prevState => ({\n        users: prevState.users.filter(user => user.id !== id)\n      }));\n    };\n\n    this.handleFormChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState(prevState => ({\n        userForm: { ...prevState.userForm,\n          [name]: value\n        }\n      }));\n    };\n\n    this.mountEditForm = async id => {\n      const users = await readAllUsers();\n      const user = users.find(el => el.id === parseInt(id));\n      this.setState({\n        userForm: user\n      });\n    };\n\n    this.resetForm = () => {\n      this.setState({\n        userForm: {\n          name: \"\",\n          photo: \"\"\n        }\n      });\n    };\n\n    this.handleFormChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState(prevState => ({\n        userForm: { ...prevState.userForm,\n          [name]: value\n        }\n      }));\n    };\n\n    this.mountEditForm = async id => {\n      const users = await readAllUsers();\n      const user = users.find(el => el.id === parseInt(id));\n      this.setState({\n        userForm: user\n      });\n    };\n\n    this.mountRemedyCreateForm = async id => {\n      const remedies = await readAllRemedies();\n      const remedy = remedies.find(el => el.id === parseInt(id));\n      this.setState({\n        remedyForm: remedy\n      });\n    };\n\n    this.mountRemedyEditForm = async id => {\n      const remedies = await readAllRemedies();\n      const remedy = remedies.find(el => el.id === parseInt(id));\n      this.setState({\n        remedyForm: remedy\n      });\n    };\n\n    this.resetForm = () => {\n      this.setState({\n        userForm: {\n          name: \"\",\n          photo: \"\"\n        }\n      });\n    };\n\n    this.state = {\n      currentUser: null,\n      authFormData: {\n        username: \"\",\n        email: \"\",\n        password: \"\"\n      }\n    };\n  }\n\n  async componentDidMount() {\n    const currentUser = await verifyUser();\n\n    if (currentUser) {\n      this.setState({\n        currentUser\n      });\n    }\n  }\n\n  async componentDidMount() {\n    const user = await verifyUser();\n\n    if (user) {\n      this.setState({\n        user\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(BrowserRouter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      handleLoginButton: this.handleLoginButton,\n      handleLogout: this.handleLogout,\n      currentUser: this.state.currentUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      render: () => /*#__PURE__*/React.createElement(Login, {\n        handleLogin: this.handleLogin,\n        handleChange: this.authHandleChange,\n        formData: this.state.authFormData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 15\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/register\",\n      render: () => /*#__PURE__*/React.createElement(Register, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 15\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => /*#__PURE__*/React.createElement(UserView, {\n        currentUser: this.state.currentUser,\n        user: this.state.user,\n        userForm: this.state.userForm,\n        handleFormChange: this.handleFormChange,\n        newUser: this.newUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => /*#__PURE__*/React.createElement(MoodPage, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => /*#__PURE__*/React.createElement(Moods, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 13\n      }\n    }), \"CreateRemedy\", /*#__PURE__*/React.createElement(Route, {\n      path: \"/remedies/:id\",\n      render: props => {\n        const {\n          id\n        } = props.match.params;\n        const remedy = this.state.remedies.find(el => el.id === parseInt(id));\n        return /*#__PURE__*/React.createElement(Moods, {\n          id: id,\n          remedy: remedy,\n          handleFormChange: this.handleFormChange,\n          mountRemedyEditForm: this.mountRemedyEditForm,\n          editRemedy: this.editRemedy,\n          RemedyForm: this.state.RemedyForm,\n          deleteRemedy: this.deleteRemedy,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 24\n          }\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/remedies/:id\",\n      render: props => {\n        const {\n          id\n        } = props.match.params;\n        const remedy = this.state.remedies.find(el => el.id === parseInt(id));\n        return /*#__PURE__*/React.createElement(Moods, {\n          id: id,\n          remedy: remedy,\n          handleFormChange: this.handleFormChange,\n          mountRemedyEditForm: this.mountRemedyEditForm,\n          editRemedy: this.editRemedy,\n          RemedyForm: this.state.RemedyForm,\n          deleteRemedy: this.deleteRemedy,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 24\n          }\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 13\n      }\n    }), \"}\")));\n  }\n\n}\n\nexport default withRouter(App);","map":{"version":3,"sources":["/Users/fuentes/newB/chrysalist4/client/src/App.js"],"names":["React","Route","BrowserRouter","Switch","withRouter","UserView","MoodPage","Moods","UserPage","Login","Register","createRemedy","verifyUser","readAllRemedies","updateUser","destroyUser","readAllUsers","Header","App","Component","constructor","props","getUsers","users","setState","newRemedy","e","preventDefault","remedy","state","remedyForm","prevState","remedies","title","descriptiom","editUser","userForm","updatedUser","id","map","user","deleteUser","filter","handleFormChange","name","value","target","mountEditForm","find","el","parseInt","resetForm","photo","mountRemedyCreateForm","mountRemedyEditForm","currentUser","authFormData","username","email","password","componentDidMount","render","handleLoginButton","handleLogout","handleLogin","authHandleChange","newUser","match","params","editRemedy","RemedyForm","deleteRemedy"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Route, BrowserRouter,Switch} from 'react-router-dom';\nimport { withRouter } from 'react-router';\nimport UserView from './components/UserView'\n// import EditUse from './component/EditUser'\nimport MoodPage from './components/MoodPage'\nimport Moods from './components/Moods'\nimport UserPage from './components/UserPage'\n// import CreateRemedy from './components/CreateRemedies'\nimport Login from './components/Login'\nimport Register from './components/Register'\nimport {\n  \n  createRemedy,\n  verifyUser,\n  readAllRemedies,\n  updateUser,\n  destroyUser,\n  readAllUsers,\n} from './services/api-helper';\n\nimport Header from './components/Header';\n\nimport './App.css';\n// import Header from './components/Header';\n\nclass App extends React.Component{\n\n\n constructor(props) {\n  super(props);\n  this.state = {\n    currentUser: null,\n    authFormData: {\n      username: \"\",\n      email: \"\",\n      password: \"\"\n    }\n  };\n}\n\n\nasync componentDidMount() {\n  const currentUser = await verifyUser()\n  if (currentUser) {\n    this.setState({ currentUser })\n  \n}\n}\n\nasync componentDidMount() {\n  const user = await verifyUser()\n  if (user) {\n    this.setState({ user })\n  \n}\n}\n\ngetUsers = async () => {\n  const users = await readAllUsers();\n  this.setState({\n    users\n  })\n}\n\nnewRemedy = async (e) => {\n  e.preventDefault();\n  const remedy = await createRemedy(this.state.remedyForm);\n  this.setState(prevState => ({\n    remedies: [...prevState.remedies, remedy],\n    remedyForm: {\n      title: \"\",\n      descriptiom: \"\"\n    }\n  }))\n}\n\neditUser = async () => {\n  const { userForm } = this.state\n  const updatedUser = await updateUser(userForm.id, userForm);\n  this.setState(prevState => (\n    {\n      users: prevState.users.map(user => {\n        return user.id === userForm.id ? updatedUser : user\n      }),\n    }\n  ))\n}\n\ndeleteUser = async (id) => {\n  await destroyUser(id);\n  this.setState(prevState => ({\n    users: prevState.users.filter(user => user.id !== id)\n  }))\n}\n\nhandleFormChange = (e) => {\n  const { name, value } = e.target;\n  this.setState(prevState => ({\n    userForm: {\n      ...prevState.userForm,\n      [name]: value\n    }\n  }))\n}\n\nmountEditForm = async (id) => {\n  const users = await readAllUsers();\n  const user = users.find(el => el.id === parseInt(id));\n  this.setState({\n    userForm: user\n  });\n}\n\nresetForm = () => {\n  this.setState({\n    userForm: {\n      name: \"\",\n      photo: \"\"\n    }\n  })\n}\nhandleFormChange = (e) => {\n  const { name, value } = e.target;\n  this.setState(prevState => ({\n    userForm: {\n      ...prevState.userForm,\n      [name]: value\n    }\n  }))\n}\n\nmountEditForm = async (id) => {\n  const users = await readAllUsers();\n  const user = users.find(el => el.id === parseInt(id));\n  this.setState({\n    userForm: user\n  });\n}\n\nmountRemedyCreateForm = async (id) => {\n  const remedies = await readAllRemedies();\n  const remedy = remedies.find(el => el.id === parseInt(id));\n  this.setState({\n    remedyForm: remedy\n  });\n}\n\n\nmountRemedyEditForm = async (id) => {\n  const remedies = await readAllRemedies();\n  const remedy = remedies.find(el => el.id === parseInt(id));\n  this.setState({\n    remedyForm: remedy\n  });\n}\n\n\nresetForm = () => {\n  this.setState({\n    userForm: {\n      name: \"\",\n      photo: \"\"\n    }\n  })\n}\n\n \nrender(){\n\n\n    return (\n      <BrowserRouter>\n        <Switch>\n          <div className=\"App\" >\n             <Header\n              handleLoginButton={this.handleLoginButton}\n              handleLogout={this.handleLogout}\n              currentUser={this.state.currentUser}\n            />\n            <Route exact path=\"/login\" render={() => (\n              <Login\n                handleLogin={this.handleLogin}\n                handleChange={this.authHandleChange}\n                formData={this.state.authFormData} />\n              )}/>\n            <Route exact path=\"/register\" render={() => (\n              <Register />)} />\n            <Route\n              exact path=\"/\"\n              render={() => (\n                <UserView\n                  currentUser={this.state.currentUser}\n                  user={this.state.user}\n                  userForm={this.state.userForm}\n                  handleFormChange={this.handleFormChange}\n                  newUser={this.newUser} />\n              )}/>\n            <Route\n              exact path=\"/\"\n              render={() => (\n                <MoodPage />\n              )}/>\n            <Route\n              exact path=\"/\"\n              render={() => (\n                <Moods />\n              )}/>\n              CreateRemedy\n            <Route\n              path=\"/remedies/:id\"\n              render={(props) => {\n                const { id } = props.match.params;\n                const remedy = this.state.remedies.find(el => el.id === parseInt(id));\n                return <Moods\n                id={id}\n                remedy={remedy}\n                handleFormChange={this.handleFormChange}\n                mountRemedyEditForm={this.mountRemedyEditForm}\n                editRemedy={this.editRemedy}\n                RemedyForm={this.state.RemedyForm}\n                deleteRemedy={this.deleteRemedy} />\n              }}\n            />\n            <Route\n              path=\"/remedies/:id\"\n              render={(props) => {\n                const { id } = props.match.params;\n                const remedy = this.state.remedies.find(el => el.id === parseInt(id));\n                return <Moods\n                  id={id}\n                  remedy={remedy}\n                  handleFormChange={this.handleFormChange}\n                  mountRemedyEditForm={this.mountRemedyEditForm}\n                  editRemedy={this.editRemedy}\n                  RemedyForm={this.state.RemedyForm}\n                  deleteRemedy={this.deleteRemedy} />\n              }}\n            />}\n          </div>\n        </Switch>\n      </BrowserRouter>\n     \n    );\n  }\n}\n\nexport default withRouter(App);\n"]},"metadata":{},"sourceType":"module"}