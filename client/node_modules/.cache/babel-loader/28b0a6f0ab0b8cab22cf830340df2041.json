{"ast":null,"code":"var _jsxFileName = \"/Users/fuentes/newB/chrysalist4/client/src/components/CreateRemedies.jsx\";\nimport React, { Component } from 'react';\nimport EditRemedy from './EditRemedy';\nimport { Route } from 'react-router-dom';\nimport { withRouter } from 'react-router';\n\nclass CreateRemedies extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEdit: false,\n      isNew: false\n    };\n  }\n\n  componentDidMount() {\n    this.props.mountRemedyCreateForm(this.props.id);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"create-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }, \"Create a new remedy\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.props.newRemedy,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }\n    }, \"Photo Link:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      value: this.rops.remedyForm.photo,\n      onChange: this.props.handleFormChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, \"Remedy's name:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"description\",\n      value: this.props.remedyForm.name,\n      onChange: this.props.handleFormChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 12\n      }\n    }, this.props.emedy.title), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }, this.props.remedy.description), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        this.setState({\n          isNew: true\n        });\n        this.props.history.push(`new/remedies/${this.props.remedy.id}/${this.props.mood.id}/${this.props.user.id}`);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, \"Create\")));\n  }\n\n  componentDidMount() {\n    this.props.mountRemedyEditForm(this.props.id);\n  }\n\n  render() {\n    const {\n      remedy\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"remedy-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    }, remedy === undefined ? /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 33\n      }\n    }, \"Loading . . .\") : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 10\n      }\n    }, remedy.title, \" \", remedy.description, \"  \"), this.state.isEdit ? /*#__PURE__*/React.createElement(Route, {\n      path: '/remedies/:id/edit',\n      render: () => /*#__PURE__*/React.createElement(EditRemedy, {\n        handleFormChange: this.props.handleFormChange,\n        handleSubmit: e => {\n          e.preventDefault();\n          this.props.editRemedy();\n          this.setState({\n            isEdit: false\n          });\n          this.props.history.push(`/remedies/${this.props.remedyForm.id / this.props.user.id / this.props.mood.id}`);\n        },\n        remedyForm: this.props.remedyForm,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }\n    }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, remedy.title), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, remedy.description), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        this.setState({\n          isEdit: true\n        });\n        this.props.history.push(`/remedies/${remedy.id}/edit`);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, \"Edit\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        this.props.deleteRemedy(remedy.id);\n        this.props.history.push('/');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, \"Delete\"))));\n  }\n\n}\n\nexport default withRouter(CreateRemedies);","map":{"version":3,"sources":["/Users/fuentes/newB/chrysalist4/client/src/components/CreateRemedies.jsx"],"names":["React","Component","EditRemedy","Route","withRouter","CreateRemedies","constructor","props","state","isEdit","isNew","componentDidMount","mountRemedyCreateForm","id","render","newRemedy","rops","remedyForm","photo","handleFormChange","name","emedy","title","remedy","description","setState","history","push","mood","user","mountRemedyEditForm","undefined","e","preventDefault","editRemedy","deleteRemedy"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport EditRemedy from './EditRemedy'\nimport { Route } from 'react-router-dom';\nimport { withRouter } from 'react-router';\n\nclass CreateRemedies extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEdit: false,\n      isNew: false\n    }\n  }\n\n  componentDidMount() {\n    this.props.mountRemedyCreateForm(this.props.id);\n  }\n  render(){ \n  \n    return (\n      <div className=\"create-form\" >\n        <h2>Create a new remedy</h2>\n        <form onSubmit={this.props.newRemedy}>\n          <p>Photo Link:</p>\n          <input\n            type=\"text\"\n            name=\"name\"\n\n            value={this.rops.remedyForm.photo}\n            onChange={this.props.handleFormChange} />\n           \n            <p>Remedy's name:</p>\n            \n          <input\n            type=\"text\"\n            name=\"description\"\n            value={this.props.remedyForm.name}\n            onChange={this.props.handleFormChange} \n            />\n           <h1>{this.props.emedy.title}</h1>\n                <h1>{this.props.remedy.description}</h1>\n                <button onClick={() => {\n                  this.setState({\n                    isNew: true\n                  })\n                  this.props.history.push(`new/remedies/${this.props.remedy.id}/${this.props.mood.id}/${this.props.user.id}`)\n                }}>Create</button>\n          \n        </form>\n      </div >\n      \n    )\n } \n  \n\n  componentDidMount() {\n    this.props.mountRemedyEditForm(this.props.id);\n  }\n\n  render() {\n    const { remedy } = this.props;\n    return (\n      <div className=\"remedy-page\">\n        {remedy === undefined ? <h2>Loading . . .</h2> : (\n          <div>\n         <div>{remedy.title} {remedy.description}  </div>\n            {this.state.isEdit ?\n              <Route path={'/remedies/:id/edit'} render={() => (\n                <EditRemedy\n                  handleFormChange={this.props.handleFormChange}\n                  handleSubmit={(e) => {\n                    e.preventDefault();\n                    this.props.editRemedy();\n                    this.setState({ isEdit: false })\n                    this.props.history.push(`/remedies/${this.props.remedyForm.id/this.props.user.id/this.props.mood.id}`)\n                  }}\n                  remedyForm={this.props.remedyForm} />\n              )} />\n              :\n              <>\n                <h1>{remedy.title}</h1>\n                <h1>{remedy.description}</h1>\n                <button onClick={() => {\n                  this.setState({\n                    isEdit: true\n                  })\n                  this.props.history.push(`/remedies/${remedy.id}/edit`)\n                }}>Edit</button>\n                <button onClick={() => {\n                  this.props.deleteRemedy(remedy.id);\n                  this.props.history.push('/')\n                }}>Delete</button>\n              </>\n            }\n          </div>)}\n      </div>)\n  }\n}\n\nexport default withRouter(CreateRemedies);"]},"metadata":{},"sourceType":"module"}